[package]
name = "fetchkit"
version = "0.1.0"
edition = "2024"
rust-version = "1.85"
license = "MIT OR Apache-2.0"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(coverage,coverage_nightly)',
] }

[features]
default = [
  "deflate-default",
  "tar",
  "zip",
  "download",
  "reqwest",
  "digest",
  "minisign",
]

# File verification support
minisign = ["dep:minisign-verify"]
digest = ["dep:digest"]

# Archive file support
tar = ["dep:tar"]
zip = ["dep:zip"]

# Compression methods support
# the backend of flate2 is not specified, pass feature flag to flate2 to specify the backend
deflate = ["dep:flate2", "zip?/flate2", "zip?/deflate-flate2"]
deflate-default = ["deflate", "flate2?/rust_backend"]

# Download
download = ["dep:tokio", "dep:futures-util"]
reqwest = ["dep:reqwest"]

[dependencies]
thiserror = { workspace = true }

# Download dependencies
tokio = { workspace = true, features = ["rt"], optional = true }
reqwest = { workspace = true, features = ["stream"], optional = true }
futures-util = { workspace = true, optional = true }

# Verification methods
digest = { workspace = true, optional = true }
minisign-verify = { workspace = true, optional = true }

# Optional archive extraction methods
tar = { workspace = true, optional = true }
zip = { workspace = true, optional = true }

# Compression methods
flate2 = { workspace = true, optional = true }
log = { workspace = true }
bytes = { workspace = true }

[dev-dependencies]
sha2 = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["macros"] }

[workspace.dependencies]
bytes = "1.10.1"
digest = "0.10"
flate2 = "1"
futures-util = "0.3"
log = "0.4.20"
minisign-verify = "0.2.3"
reqwest = "0.12"
sha2 = "0.10.7"
tar = "0.4.40"
tempfile = "3.14.0"
thiserror = "2"
tokio = "1"
zip = { version = "2", default-features = false }
